AWSTemplateFormatVersion: 2010-09-09
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: EC2 Tutorial
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  MyImageId:
    Description: 'Image Id for Amazon Linux 2 AMI (HVM), SSD Volume Type'
    Type: String
    Default: ami-0a23ccb2cdd9286bb
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref MyImageId
      Tags:
        - Key: Environment
          Value: Development
        - Key: Source
          Value: Cloudformation
      IamInstanceProfile: !Ref ListS3BucketsInstanceProfile
      UserData: 
        Fn::Base64: !Sub |
          sudo yum update -y
          sudo yum install -y ruby wget
          wget https://aws-codedeploy-ap-south-1.s3.ap-south-1.amazonaws.com/latest/install
          chmod +x ./install
          sudo ./install auto
  ListS3BucketsInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: demo-ec2-instance-profile
      Path: /
      Roles:
        - !Ref ListS3BucketsRole
  ListS3BucketsPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: ListS3BucketsPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource: '*'
      Roles:
        - !Ref ListS3BucketsRole
  ListS3BucketsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: demo-ec2-instance-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 578de650-9ae7-4a2d-8caa-6ebc5990a94b
    DependsOn:
      - EC2Instance
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicIp
  WebsiteURL:
    Description: URL for newly created web page
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - EC2Instance
          - PublicDnsName
        - ':8080/'
